doctype html

mixin resize(elem)
    script.
        function resize() {
          const { width, height } = getSize();
          document.getElementById('widget').style.paddingTop = height + 'px';
          #{elem}
            .width(width)
            .height(height)
            .render();
        }
        window.onresize = resize;

html(lang='en')
    head
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1.0')
        link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Montserrat:200,300,700')
        each css in ['common', 'highlight.min', 'example']
            link(rel='stylesheet', type='text/css', href='../../../style/' + css + '.css')
        script(type='text/javascript', src='https://unpkg.com/mobile-detect@1.4.4/mobile-detect.js')
        each lib in ['codedoc.min', 'highlight.min']
            script(type='text/javascript', src='../../../js/' + lib + '.js')
        each dependency in dependencies
            script(type='text/javascript', src='../../../js/' + dependency.lib + '.' + dependency.version + '.min.js')
        script(type='text/javascript', src='../../../../dist/dalian.min.js')
        script(type='text/javascript').
          codedoc.heading()
            .callback(function() {
              hljs.initHighlighting.called = false;
              hljs.initHighlighting();
            });
        script.
          function getSize () {
            const md = new MobileDetect(window.navigator.userAgent);
            const width = parseFloat(d3.select('#widget').style('width'));
            const aspect = md.mobile() === null ? 2 : 1.5;
            const height = width / aspect;
            return { width, height };
          }
        title #{title} | dalian
    body
        main
            #widget
            if div
                div(id=div.i, class=div.c)
            h1 description
            #desc !{description}
            a(href='https://github.com/synesenom/dalian/blob/master/src/modules/widgets/' + widgetName + '.js') source
            a(href='../../../api/widgets/' + widgetName + '.html') docs
            a(href='' + minjs) min.js
            #code-doc
            | !{example}
            +resize('' + variableName)
    script.
        resize();
